<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Invoke-RoboCheck</command:name>
<command:verb>Invoke</command:verb>
<command:noun>RoboCheck</command:noun>
<maml:description><maml:para>Health check Remote Office Branch Office (ROBO) sites running vSphere.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>This is the main function for the Invoke-RoboCheck module. Here, we connect to one or more vCenter Servers and check ESX health.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Invoke-RoboCheck</maml:name>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>Computer</maml:name>
<maml:Description><maml:para>String. The IP Address or DNS name of one or more vCenter Server machines to connect to. For IPv6, enclose address in square brackets, for example [fe80::250:56ff:feb0:74bd%4]. For server lists, provide the path to a text file, for example, "C:\servers.txt".
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: String[]
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: True
</maml:para>
<maml:para>Position: 1
</maml:para>
<maml:para>Default value: None
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>Credential</maml:name>
<maml:Description><maml:para>pscredential. The login credentials for vCenter Optionally, you can enter just username to be prompted for runtime password.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: PSCredential
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: None
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>CredFallBack</maml:name>
<maml:Description><maml:para>pscredential. If the first login fails, try these. Cannot be the same username as Credential.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: PSCredential
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: None
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>OutputCSV</maml:name>
<maml:Description><maml:para>Switch. Activate this to save reports to CSV.  The path is determined by your Invoke-RoboCheck.ini
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: SwitchParameter
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: False
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>ReportType</maml:name>
<maml:Description><maml:para>validate set.  The default for ReportType is Detailed, which includes everything.  Tab complete though options. Other choices include "Standard","NTP","Datastore", or "AutoStart". This only affects output, runtime does not decrease with smaller reports.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: String
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: Detailed
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>Cluster</maml:name>
<maml:Description><maml:para>Choose to target ESX hosts only from a particular cluster
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: String[]
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: None
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>SplatPref</maml:name>
<maml:Description><maml:para>For advanced users, the preferences can be splatted in as a hashtable.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: Array
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: @()
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>SaveCredential</maml:name>
<maml:Description><maml:para>Optionally save an encypted credential to disk. This selection presents a Menu based system for user to create up to 4 credential files. The Credential files must be created one at time.  Re-run the script to create more if needed. The Invoke-RoboCheck function can consume up to 2 cred files. After creating your cred files, update the path in your preferences ($Env:USERPROFILE\Invoke-RoboCheck.ini by default).
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: SwitchParameter
</maml:para>
<maml:para>Parameter Sets: Menu
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: True
</maml:para>
<maml:para>Position: 1
</maml:para>
<maml:para>Default value: False
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>CredOutputPath</maml:name>
<maml:Description><maml:para>String.  If saving Credentials to disk with the SaveCredential parameter, The CredOutputPath (alias Path) allows you to choose the folder you want your saved credentials output to.  Remember to update your Invoke-RoboCheck.ini to enjoy seamless logins.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: String
</maml:para>
<maml:para>Parameter Sets: Menu
</maml:para>
<maml:para>Aliases: Path
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: True
</maml:para>
<maml:para>Position: 2
</maml:para>
<maml:para>Default value: None
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>AutoLaunch</maml:name>
<maml:Description><maml:para>Switch.  Optionally auto-launch the CSV report.  If set differently in UserPrefs, the runtime choice wins.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: SwitchParameter
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: False
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none"><maml:name>Quiet</maml:name>
<maml:Description><maml:para>bool.  minimalist output. The default is true (quiet output). Set to false for more detailed info.
</maml:para>
<maml:para>
</maml:para>
<maml:para>Type: Boolean
</maml:para>
<maml:para>Parameter Sets: Default
</maml:para>
<maml:para>Aliases: 
</maml:para>
<maml:para>
</maml:para>
<maml:para>Required: False
</maml:para>
<maml:para>Position: Named
</maml:para>
<maml:para>Default value: True
</maml:para>
<maml:para>Accept pipeline input: False
</maml:para>
<maml:para>Accept wildcard characters: False
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false"></command:parameterValue>
<dev:type><maml:name></maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes><command:inputType><dev:type><maml:name>System.String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:inputType>
<command:inputType><dev:type><maml:name>PSCredential</maml:name>
</dev:type>
<maml:description><maml:para>&lt;br&gt;
</maml:para>
</maml:description>
</command:inputType>
</command:inputTypes>
<command:returnValues><command:returnValue><dev:type><maml:name>Object</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
<command:returnValue><dev:type><maml:name>String</maml:name>
</dev:type>
<maml:description><maml:para>
</maml:para>
</maml:description>
</command:returnValue>
<command:returnValue><dev:type><maml:name>PSCredential</maml:name>
</dev:type>
<maml:description><maml:para>&lt;br&gt;
</maml:para>
</maml:description>
</command:returnValue>
</command:returnValues>
<maml:alertSet><maml:alert><maml:para>Script:         Invoke-RoboCheck.ps1 Type:           Function ParentModule:   Invoke-RoboCheck Author:         Mike Nisk Organization:   vmkdaily Updated:        05April2017
</maml:para>
<maml:para>ABOUT CREDENTIAL HANDLING We consume credentials in the following order:
PSCredential Object  - This always wins EncryptedXml         - We try this next if no creds are given PassThrough (SSPI)   - Finally, if no other valid credential is found, we use SSPI
</maml:para>
<maml:para>Note:  If SSPI fails, and user name is presented, then the local VMware VICredential store is checked.
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
<dev:code>Invoke-RoboCheck -Computer vcenter01.lab.local</dev:code>
<dev:remarks><maml:para>Use passthrough authentication (SSPI) to connect to vCenter and return an ESX report object.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
<dev:code>Invoke-RoboCheck -Computer vcenter01.lab.local -Credential (Get-Credential)</dev:code>
<dev:remarks><maml:para>Get prompted for credentials then return the results to screen
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
<dev:code>Invoke-RoboCheck -SaveCredential -Path "c:\creds"</dev:code>
<dev:remarks><maml:para>Example saving a credential to disk.  Provide the name of a folder for Path. You will be prompted for username and password.  You can then modify your preferences (Invoke-RoboCheck.ini) to reflect the path to your creds. After doing so, you no longer need to populate the Credential parameter as the script will automatically read the cred files.  Maximum of 2 can be added to prefernce settings for consumption at runtime.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
<dev:code>$credsVC = Get-Credential administrator@vsphere.local
Invoke-RoboCheck -Computer C:\vc-list.txt -Credential $credsVC -OutputCSV</dev:code>
<dev:remarks><maml:para>Save credentials to a variable.  Then, run a report and save to CSV.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
<dev:code>Invoke-RoboCheck -Computer vc01,vc02 -Credential $credsVC</dev:code>
<dev:remarks><maml:para>Run a report against an array of vcenter names and deliver the info on screen.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
<dev:code>Invoke-RoboCheck -Computer bigvc01.lab.local -Cluster labcluster03 -Credential $labCreds -OutputCSV</dev:code>
<dev:remarks><maml:para>Run a report against a cluster saving the details to CSV.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
<dev:code>$report = Invoke-RoboCheck -Computer C:\Pester\robo-vc-list.txt -Credential $credsVC -CredFallBack $CredsRoboSSO -OutputCSV</dev:code>
<dev:remarks><maml:para>Run a report against a list of vCenters.  The server list should be one vCenter Server per line). In this example we use two sets of credentials.  The script will quietly try the next set as needed. Finally, ouput the results to CSV.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 8 --------------------------</maml:title>
<dev:code>$report = Invoke-RoboCheck -Computer vcva02.lab.local -Credential $credsLabVC
C:\\\&gt; $report | select Name,State,Model,overallstatus

Name            State     Model     OverallStatus
----            -----     -----     -------------
esx01.lab.local Connected MacPro6,1         green
esx02.lab.local Connected MacPro6,1         green
esx03.lab.local Connected MacPro6,1         green
esx04.lab.local Connected MacPro6,1         green</dev:code>
<dev:remarks><maml:para>This example runs the report against vCenter, and saves it to a variable named $report. We then only look at a few of the items we are interested in.  To see the full report you can $report | Out-GridView
</maml:para>
<maml:para>Tip: If you did not use the OutputCSV parameter, but you saved the report to a variable like above, then you can still saves to CSV by performing: $report | Export-Csv -NoTypeInformation c:\temp\robo-report.csv
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>-------------------------- EXAMPLE 9 --------------------------</maml:title>
<dev:code>$report = Invoke-RoboCheck -Computer vcva02.lab.local -Credential $credsLabVC

C:\\\&gt; $report | select -First 1

Name                 : esx01.lab.local
State                : Connected
OverallStatus        : green
DiffToUTC            : 0.1916
Datastore1 Free (GB) : 67
Datastore2 Free (GB) : 99
MemoryFreeGB         : 28
CpuUsageMhz          : 9115
VM Count             : 4
VmAutoStartOff       : n/a
EsxStartProtection   : HA Protected
IsStandalone         : False
NtpRunning           : True
NtpServers           : 10.202.3.250
EsxVersion           : 6.0.0
EsxBuild             : 3825889
OsType               : vmnix-x86
LicenseKey           : XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
MemoryTotalGB        : 64
NumCpu               : 4
ProcessorType        : Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz
Manufacturer         : Apple Inc.
Model                : MacPro6,1
BIOS                 : MP61.88Z.0116.B16.1509081436
ParentVC             : vcva02.lab.local</dev:code>
<dev:remarks><maml:para>Example showing all items captured and returned in an object for a single ESX host.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks></command:relatedLinks>
</command:command>
</helpItems>
